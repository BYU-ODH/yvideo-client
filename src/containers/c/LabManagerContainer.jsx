import React, { useEffect } from 'react'
import { useParams, useLocation } from 'react-router-dom'
import { connect } from 'react-redux'

import { roles } from 'models/User'

import { interfaceService } from 'services'

import { LabManager } from 'components'

import { CreateCollection } from 'components/modals'

import { objectIsEmpty } from 'lib/util'

/**
 * DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING
 */

const LabManagerContainer = props => {

	const {
		admin,
		data,
		setHeaderBorder,
		toggleModal,
	} = props

	const params = useParams()
	const location = useLocation()

	useEffect(() => {
		setHeaderBorder(true)

		if(location.createCollection) {
			toggleModal({
				component: CreateCollection,
			})
		}
	}, [setHeaderBorder, location.createCollection, toggleModal])

	if (objectIsEmpty(data)) return null

	const createNew = () => {
		// TODO: Make variable to pass in prof.id somehow
		toggleModal({
			component: CreateCollection,
		})
	}

	const viewstate = {
		collection: params.id ? data[params.id] : null, // TODO: We'll need to get the id of the collection back
		admin,
	}

	const handlers = {
		createNew,
	}

	return <LabManager viewstate={viewstate} handlers={handlers} />
}

const mapStateToProps = store => ({
	data: store.adminStore.data,
	admin: store.authStore.user.roles.includes(roles.admin),
})

const mapDispatchToProps = {
	setHeaderBorder: interfaceService.setHeaderBorder,
	toggleModal: interfaceService.toggleModal,
}

export default connect(mapStateToProps, mapDispatchToProps)(LabManagerContainer)
